
/*
题目： leetcode第66题

给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。

最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。

你可以假设除了整数 0 之外，这个整数不会以零开头。

示例 1:

输入: [1,2,3]
输出: [1,2,4]
解释: 输入数组表示数字 123。
示例 2:

输入: [4,3,2,1]
输出: [4,3,2,2]
解释: 输入数组表示数字 4321。



*/


public class PlusOne{
	public int[] plus(int[] digits){
		int len = digits.length;
		 // 从后往前判断最后一位是否为0，如果为0，表明加1之后向前进1，否则直接输出
		for(int i=len-1;i>=0;i--){
			digits[i]++;
			digits[i]%=10;
			if(digits[i]!=0){
				return digits;
			}
		}
		// 这个是当判断完旧数组所有为都为0，表明形式是999--》1000这种类型，因此数组长度需要增加一
        // 然后将最高位赋值为1即可。
		digits = new int[len+1];
		digits[0] = 1;
		return digits;
	}
}